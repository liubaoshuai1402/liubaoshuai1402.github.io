<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MACE on BOGHTW</title>
    <link>https://liubaoshuai1402.github.io/series/mace/</link>
    <description>Recent content in MACE on BOGHTW</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 29 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://liubaoshuai1402.github.io/series/mace/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>绘制DFT数据和MACE预测值的关系图</title>
      <link>https://liubaoshuai1402.github.io/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%8A%BF/dft%E6%95%B0%E6%8D%AEvsmace%E9%A2%84%E6%B5%8B%E5%80%BC/</link>
      <pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate>
      <guid>https://liubaoshuai1402.github.io/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%8A%BF/dft%E6%95%B0%E6%8D%AEvsmace%E9%A2%84%E6%B5%8B%E5%80%BC/</guid>
      <description>&lt;h1 id=&#34;绘制dft数据和mace预测值的关系图&#34;&gt;绘制DFT数据和MACE预测值的关系图&lt;/h1&gt;&#xA;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;本文主要搬运一下&#xD;&#xA;&lt;a href=&#34;https://colab.research.google.com/drive/1ZrTuTvavXiCxTFyjBV4GqlARxgFwYAtX#scrollTo=v75wGSfOw9dA&#34;  target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;MACE教程其一&lt;/a&gt;&#xD;&#xA;，记录一下如何绘制DFT数据和MACE预测值的关系图，用于评估模型的准确性，加上一些自己的理解。&lt;/p&gt;&#xA;&lt;p&gt;软件：ASE、&#xD;&#xA;&lt;a href=&#34;https://github.com/imagdau/aseMolec&#34;  target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;aseMolec&lt;/a&gt;&#xD;&#xA;、matplotlib、numpy&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：本文仅供参考，欢迎指出错误或分享补充。无能力提供任何指导，&lt;strong&gt;求教者切勿留言&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;准备评估函数&#34;&gt;准备评估函数&lt;/h2&gt;&#xA;&lt;p&gt;MACE官方写好了评估的命令行脚本，我们这里给它一个虚拟参数，方便以编程的方式调用它。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from mace.cli.eval_configs import main as mace_eval_configs_main&#xD;&#xA;import sys&#xD;&#xA;&#xD;&#xA;def eval_mace(configs, model, output):&#xD;&#xA;    sys.argv = [&amp;quot;program&amp;quot;, &amp;quot;--configs&amp;quot;, configs, &amp;quot;--model&amp;quot;, model, &amp;quot;--output&amp;quot;, output]&#xD;&#xA;    mace_eval_configs_main()&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;这里的&lt;code&gt;eval_mace&lt;/code&gt;函数接受三个参数，数据集如训练集、测试集的路径、训练好的模型的路径以及输出的文件命。&lt;/p&gt;&#xA;&lt;h2 id=&#34;评估数据集&#34;&gt;评估数据集&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#evaluate the training set&#xD;&#xA;eval_mace(configs=&amp;quot;data/solvent_xtb_train_200.xyz&amp;quot;,&#xD;&#xA;          model=&amp;quot;MACE_models/mace01_run-123_stagetwo.model&amp;quot;,&#xD;&#xA;          output=&amp;quot;tests/mace01/solvent_train.xyz&amp;quot;)&#xD;&#xA;&#xD;&#xA;#evaluate the test set&#xD;&#xA;eval_mace(configs=&amp;quot;data/solvent_xtb_test.xyz&amp;quot;,&#xD;&#xA;          model=&amp;quot;MACE_models/mace01_run-123_stagetwo.model&amp;quot;,&#xD;&#xA;          output=&amp;quot;tests/mace01/solvent_test.xyz&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;这样，MACE就会对数据集进行评估，因为其实DFT数据是已有的，主要是在输出文件中，补上MACE的预测值。&lt;/p&gt;&#xA;&lt;h2 id=&#34;画图&#34;&gt;画图&lt;/h2&gt;&#xA;&lt;p&gt;然后就可以用aseMolec的如下代码进行画图了&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from aseMolec import pltProps as pp&#xD;&#xA;from ase.io import read&#xD;&#xA;import matplotlib.pyplot as plt&#xD;&#xA;from aseMolec import extAtoms as ea&#xD;&#xA;import numpy as np&#xD;&#xA;&#xD;&#xA;def plot_RMSEs(db, labs):&#xD;&#xA;    ea.rename_prop_tag(db, &#39;MACE_energy&#39;, &#39;energy_mace&#39;) #Backward compatibility&#xD;&#xA;    ea.rename_prop_tag(db, &#39;MACE_forces&#39;, &#39;forces_mace&#39;) #Backward compatibility&#xD;&#xA;&#xD;&#xA;    plt.figure(figsize=(9,6), dpi=100)&#xD;&#xA;    plt.subplot(1,3,1)&#xD;&#xA;    pp.plot_prop(ea.get_prop(db, &#39;bind&#39;, &#39;_xtb&#39;, True).flatten(), \&#xD;&#xA;                 ea.get_prop(db, &#39;bind&#39;, &#39;_mace&#39;, True).flatten(), \&#xD;&#xA;                 title=r&#39;Energy $(\rm eV/atom)$ &#39;, labs=labs, rel=False)&#xD;&#xA;    plt.subplot(1,3,2)&#xD;&#xA;    pp.plot_prop(ea.get_prop(db, &#39;info&#39;, &#39;energy_xtb&#39;, True).flatten(), \&#xD;&#xA;                 ea.get_prop(db, &#39;info&#39;, &#39;energy_mace&#39;, True).flatten(), \&#xD;&#xA;                 title=r&#39;Energy $(\rm eV/atom)$ &#39;, labs=labs, rel=False)&#xD;&#xA;    plt.subplot(1,3,3)&#xD;&#xA;    pp.plot_prop(np.concatenate(ea.get_prop(db, &#39;arrays&#39;, &#39;forces_xtb&#39;)).flatten(), \&#xD;&#xA;                 np.concatenate(ea.get_prop(db, &#39;arrays&#39;, &#39;forces_mace&#39;)).flatten(), \&#xD;&#xA;                 title=r&#39;Forces $\rm (eV/\AA)$ &#39;, labs=labs, rel=False)&#xD;&#xA;    plt.tight_layout()&#xD;&#xA;    return&#xD;&#xA;&#xD;&#xA;train_data = read(&#39;tests/mace01/solvent_train.xyz&#39;, &#39;:&#39;)&#xD;&#xA;test_data = train_data[:3]+read(&#39;tests/mace01/solvent_test.xyz&#39;, &#39;:&#39;) #append the E0s for computing atomization energy errors&#xD;&#xA;&#xD;&#xA;plot_RMSEs(train_data, labs=[&#39;XTB&#39;, &#39;MACE&#39;])&#xD;&#xA;plot_RMSEs(test_data, labs=[&#39;XTB&#39;, &#39;MACE&#39;])&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;code&gt;plot_RMSEs&lt;/code&gt;函数中首先把标签重命名了一下，因为MACE的源代码&lt;code&gt;mace_eval_configs_main()&lt;/code&gt;部分默认打的标签是&lt;code&gt;MACE_&lt;/code&gt;+什么什么的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>机器学习势MACE的输入文件</title>
      <link>https://liubaoshuai1402.github.io/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%8A%BF/mace2/</link>
      <pubDate>Fri, 16 May 2025 00:00:00 +0000</pubDate>
      <guid>https://liubaoshuai1402.github.io/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%8A%BF/mace2/</guid>
      <description>&lt;h1 id=&#34;机器学习势mace的输入文件&#34;&gt;机器学习势MACE的输入文件&lt;/h1&gt;&#xA;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;不同MACE版本的参数设置会有一定的调查，注意查看自己的MACE版本。这里是0.3.13版本&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：本文仅供参考，欢迎指出错误或分享补充。无能力提供任何指导，&lt;strong&gt;求教者切勿留言&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;在超算上用slurm提交python任务&#34;&gt;在超算上用slurm提交python任务&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/bash&#xD;&#xA;#SBATCH -o job.%j.out&#xD;&#xA;#SBATCH -J lmp_job_gpu&#xD;&#xA;#SBATCH --partition=gpu        &#xD;&#xA;#SBATCH -N 1                    &#xD;&#xA;#SBATCH -G 1&#xD;&#xA;#SBATCH --gres=gpu:1&#xD;&#xA;#SBATCH --exclusive&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;export PATH=/home-ssd/Users/nsgm_zcx/openmpi-5.0.5/build/bin:$PATH&#xD;&#xA;export LD_LIBRARY_PATH=/home-ssd/Users/nsgm_zcx/openmpi-5.0.5/build/lib:$LD_LIBRARY_PATH&#xD;&#xA;export PATH=/home-ssd/Users/nsgm_zcx/lammps-develop/build-mliap:$PATH&#xD;&#xA;&#xD;&#xA;source /home-ssd/Users/nsgm_zcx/miniconda3/etc/profile.d/conda.sh&#xD;&#xA;conda activate cuda&#xD;&#xA;&#xD;&#xA;mace_run_train --config parameters.yaml&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;前面几行是为了激活lammps和openmpi，在这里没啥用。&lt;/p&gt;&#xA;&lt;p&gt;重要的是要在sh脚本里激活conda，然后用&lt;code&gt;mace_run_train&lt;/code&gt;命令行脚本来提交训练任务。&lt;/p&gt;&#xA;&lt;p&gt;用&lt;code&gt;--config&lt;/code&gt;参数和一个yaml文件来提供训练参数。&lt;/p&gt;&#xA;&lt;p&gt;以下是&lt;code&gt;parameters.yaml&lt;/code&gt;的内容&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: YSZH_MACE_model&#xD;&#xA;seed: 123&#xD;&#xA;device: cuda&#xD;&#xA;train_file: train.xyz&#xD;&#xA;valid_fraction: 0.2&#xD;&#xA;test_file: test.xyz&#xD;&#xA;compute_forces: True&#xD;&#xA;compute_stress: True&#xD;&#xA;energy_key: energy_vasp&#xD;&#xA;forces_key: forces_vasp&#xD;&#xA;stress_key: stress_vasp&#xD;&#xA;E0s: &#39;isolated&#39;&#xD;&#xA;hidden_irreps: &#39;64x0e + 64x1o&#39;&#xD;&#xA;r_max: 4.0&#xD;&#xA;batch_size: 20&#xD;&#xA;max_num_epochs: 600&#xD;&#xA;swa: True&#xD;&#xA;start_swa: 480&#xD;&#xA;ema: True&#xD;&#xA;ema_decay: 0.99&#xD;&#xA;default_dtype: float32&#xD;&#xA;lr: 0.01&#xD;&#xA;scaling: rms_forces_scaling&#xD;&#xA;multiheads_finetuning: False&#xD;&#xA;enable_cueq: True&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;要使用&lt;code&gt;mliap&lt;/code&gt;，就必须打开参数&lt;code&gt;enable_cueq: True&lt;/code&gt;，并确保python环境中安装了&lt;code&gt;cuEquivariance&lt;/code&gt;和&lt;code&gt;cupy&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
