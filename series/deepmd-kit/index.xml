<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DeepMD-Kit on BOGHTW</title><link>https://liubaoshuai1402.github.io/series/deepmd-kit/</link><description>Recent content in DeepMD-Kit on BOGHTW</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 16 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://liubaoshuai1402.github.io/series/deepmd-kit/index.xml" rel="self" type="application/rss+xml"/><item><title>如何构建训练集用于训练机器学习势</title><link>https://liubaoshuai1402.github.io/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%8A%BF/mace1/</link><pubDate>Fri, 16 May 2025 00:00:00 +0000</pubDate><guid>https://liubaoshuai1402.github.io/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%8A%BF/mace1/</guid><description>&lt;h1 id="如何构建训练集用于训练机器学习势"&gt;如何构建训练集用于训练机器学习势&lt;/h1&gt;
&lt;h2 id="前言"&gt;前言&lt;/h2&gt;
&lt;p&gt;本文将介绍如何构建一个训练集，用于训练MACE势以及DP势。需要提前利用AIMD获取DFT数据集。这里的AIMD软件是VASP。&lt;/p&gt;
&lt;p&gt;软件：ASE、DeepMD-Kit&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：本文仅供参考，欢迎指出错误或分享补充。无能力提供任何指导，&lt;strong&gt;求教者切勿留言&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id="构建mace势的训练集"&gt;构建MACE势的训练集&lt;/h2&gt;
&lt;p&gt;MACE接受的训练集非常简单，一个&lt;code&gt;xyz&lt;/code&gt;文件，包含了各种构型和它们对应的DFT数据标签，以及单原子的DFT数据，需要额外的标签&lt;code&gt;config_type=IsolatedAtom&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;顺带一提，ASE可以输出一种所谓的
&lt;a href="https://wiki.fysik.dtu.dk/ase/ase/io/formatoptions.html#extxyz" target="_blank" rel="noopener noreferrer" &gt;Extended XYZ format&lt;/a&gt;
，会把各种各样的信息（有点类似OVITO中的全局信息），放到&lt;code&gt;xyz&lt;/code&gt;文件的第二行。这一行会很长很长。MACE所采用的训练集输入格式就是它。&lt;/p&gt;
&lt;p&gt;假设我们要构建水分子的MACE势，当前所处的路径下，有两个文件夹。&lt;/p&gt;
&lt;p&gt;一个名为&lt;code&gt;H2O&lt;/code&gt;的文件夹，里面存放着进行第一性原理分子动力学后得到的&lt;code&gt;OUTCAR.tar.gz&lt;/code&gt;文件。路径为&lt;code&gt;H2O/OUTCAR.tar.gz&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;一个名为&lt;code&gt;IsolatedAtoms&lt;/code&gt;的文件夹，里面存放着涉及元素（这里是H、O）的单原子的单点能计算（ISPIN=2）。路径分别为&lt;code&gt;IsolatedAtoms/H/OUTCAR.tar.gz&lt;/code&gt;和&lt;code&gt;IsolatedAtoms/O/OUTCAR.tar.gz&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id="代码展示"&gt;代码展示&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;from ase.io import read,write
import random

#定义一个简单的函数用于打标签,这里可以自由更改标签的名字
def addlabel(configs,energy_label='energy_dft',forces_label='forces_dft',stress_label='stress_dft',is_isolated=False):
 if is_isolated == False:
 for at in configs:
 at.info[energy_label] = at.get_potential_energy(force_consistent=True)
 at.arrays[forces_label] = at.get_forces()
 at.info[stress_label] = at.get_stress(voigt=True)
 if is_isolated == True:
 for at in configs:
 at.info['config_type'] = 'IsolatedAtom'
 at.info[energy_label] = at.get_potential_energy(force_consistent=True)
 at.arrays[forces_label] = at.get_forces()
 at.info[stress_label] = at.get_stress(voigt=True)

#read()函数，这里，第一个参数是所读文件路径，第二个参数是切片slice
IsolatedH = read('IsolatedAtoms/H/OUTCAR.tar.gz',':')
IsolatedO = read('IsolatedAtoms/O/OUTCAR.tar.gz',':')
IsolatedAtoms = IsolatedH + IsolatedO
addlabel(configs=IsolatedAtoms,is_isolated=True)

#这里的slice的意思是从第一个结构开始到最后一个结构，每100个结构取一个
db = read('H2O/OUTCAR.tar.gz','::100')
addlabel(configs=db)

#打乱训练集，这对训练非常重要
random.seed(42)
random.shuffle(db)

#将打过标签的数据集合并
db = db + IsolatedAtoms
write('trainset.xyz',db)


&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里有趣的一点是，为什么对于单个结构的&lt;code&gt;OUTCAR&lt;/code&gt;，也要进行切片：&lt;code&gt;IsolatedH = read('IsolatedAtoms/H/OUTCAR.tar.gz',':')&lt;/code&gt;，而不是&lt;code&gt;IsolatedH = read('IsolatedAtoms/H/OUTCAR.tar.gz')&lt;/code&gt;。&lt;/p&gt;</description></item></channel></rss>